◎ブロック型
利点
・楽(0/1でマップ描ける)
・感覚的に分かりやすい
//・広い空間を表現できる
・マップ端の処理が楽
欠点
・イベントの方向ごとの画像の用意がめんどい
・データが多くなる(誤差の範疇)

壁フラグ型
利点
・狭い空間を有効に使える
・扉の画像データによってイベント画像の数を抑えられる
・データが少ない
欠点
・複雑(ぱっと見で構造がわからない)

→時間もないのでブロック型を採用

◎イベント
typedef struct TYPE_XX{
	int imagebuf;
	int id;
	int ix;
	POS eventpos;
}EVENT

TCB evevt(TCB *thisTCB){
	//コードをひとつずつ実行
	switch (code[ix]){
	case 0x00:
		...

	}
}

仕様
・イベント実行タスクはIX(インデックスレジスタ)を持ち、イベントデータを先頭から実行する。
・イベントリストは画像バッファ、id、ポジション、画像表示フラグを持つ。
・イベントデータはchar型配列、実行条件、int型内部変数の形をなし、コードに応じてメインプログラムが実行する。
	→文章は持たず、別の文字列データのid番号を指定して参照する。
・メインプログラムはイベントデータを読み込み、1fで出来る限りを実行する。
	→タスクを用い、タスクがそのフレーム中に消されない場合1f待機する。
	→イベント実行中は主人公の移動やメニュー開閉を制限する。
	→基本イベントはメインプログラム中でタスクとして実装しておく。